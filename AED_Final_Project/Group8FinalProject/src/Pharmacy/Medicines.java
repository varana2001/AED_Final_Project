/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pharmacy;

/**
 *
 * @author varananavadiya
 */

import Pharmacy.model.MedicineModel;
//import com.mysql.cj.xdevapi.Statement;
import com.sun.jdi.connect.spi.Connection;
//import java.sql.Connection;
//import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
//import connection.JDBCconnection;
//import hospital.LoginFrame;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Medicines extends javax.swing.JFrame {

    /**
     * Creates new form Medicines
     */
    public Medicines() {
        initComponents();
        fetchMedicines(); // Load existing medicines into the table
        tfID.setEditable(false); // Make ID field non-editable

    }
    private void fetchMedicines() {
        DefaultTableModel tb1Model = (DefaultTableModel) tableMedicine.getModel();
        tb1Model.setRowCount(0); // Clear existing data

        try {
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
            java.sql.Statement statement = connection.createStatement();
            String sql = "SELECT * FROM universitysystem.medicine";
            java.sql.ResultSet rs = statement.executeQuery(sql);

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("ID"));
                String medicine = rs.getString("MEDICINE_NAME");
                String price = rs.getString("PRICE");
                String quantity = rs.getString("QUANTITY");
                String company = rs.getString("COMPANY");

                String tbData[] = {id, medicine, price, quantity, company};
                tb1Model.addRow(tbData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error fetching medicines: " + e.getMessage());
        }
    }
    private int getNextMedicineId() {
        int nextId = 1;
        try {
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
            java.sql.Statement statement = connection.createStatement();
            String sql = "SELECT MAX(ID) AS maxId FROM universitysystem.medicine";
            java.sql.ResultSet rs = statement.executeQuery(sql);
            if (rs.next() && rs.getInt("maxId") > 0) {
                nextId = rs.getInt("maxId") + 1;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error fetching next ID: " + e.getMessage());
        }
        return nextId;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfMedicine = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        tfQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbCompany = new javax.swing.JComboBox<>();
        buttonAdd = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMedicine = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        buttonSearch = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE MEDICINES");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 272, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jLabel2.setText("ID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 106, 48, -1));

        tfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDActionPerformed(evt);
            }
        });
        getContentPane().add(tfID, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 102, 124, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jLabel3.setText("MEDICINE NAME");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jLabel4.setText("PRICE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 75, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jLabel5.setText("QUANTITY");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 208, 75, -1));

        tfMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMedicineActionPerformed(evt);
            }
        });
        getContentPane().add(tfMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 249, -1));

        tfPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPriceActionPerformed(evt);
            }
        });
        getContentPane().add(tfPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 102, -1));
        getContentPane().add(tfQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 204, 170, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jLabel8.setText("COMPANY");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 249, 79, -1));

        cbCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cipla", "Vertex", "Pfizer", "Roche", "Merck" }));

        cbCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCompanyActionPerformed(evt);
            }
        });

        getContentPane().add(cbCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 245, -1, -1));

        buttonAdd.setBackground(new java.awt.Color(0, 153, 153));
        buttonAdd.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        buttonAdd.setText("ADD");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        getContentPane().add(buttonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 450, -1, -1));

        buttonUpdate.setBackground(new java.awt.Color(0, 153, 153));
        buttonUpdate.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        buttonUpdate.setText("UPDATE");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(569, 450, -1, -1));

        buttonDelete.setBackground(new java.awt.Color(0, 153, 153));
        buttonDelete.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        buttonDelete.setText("DELETE");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 450, -1, -1));

        tableMedicine.setBackground(new java.awt.Color(204, 255, 255));

        tableMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MEDICINE_NAME", "PRICE", "QUANTITY", "COMPANY"
            }
        ));
        tableMedicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMedicineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMedicine);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 327, 773, 105));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("MEDICINE TABLE");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 286, 174, -1));

        buttonSearch.setBackground(new java.awt.Color(0, 153, 153));
        buttonSearch.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        buttonSearch.setText("VIEW");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });
        getContentPane().add(buttonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 450, -1, -1));

        buttonCancel.setBackground(new java.awt.Color(0, 153, 153));
        buttonCancel.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        buttonCancel.setText("Log out");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 20, -1, -1));


        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/(new)ai-generated-national-doctors-da.jpg"))); // NOI18N

        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void tfMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMedicineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMedicineActionPerformed

    private void tfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDActionPerformed

    private void tfPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPriceActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        
 int selectedRow = tableMedicine.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a medicine to update!");
            return;
        }

        String id = tfID.getText();
        String medicine = tfMedicine.getText();
        String price = tfPrice.getText();
        String quantity = tfQuantity.getText();
        String company = cbCompany.getSelectedItem().toString();

        if (medicine.isEmpty() || price.isEmpty() || quantity.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
            return;
        }

        try {
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
            String updateQuery = "UPDATE universitysystem.medicine SET MEDICINE_NAME = ?, PRICE = ?, QUANTITY = ?, COMPANY = ? WHERE ID = ?";
            java.sql.PreparedStatement statement = connection.prepareStatement(updateQuery);

            statement.setString(1, medicine);
            statement.setString(2, price);
            statement.setString(3, quantity);
            statement.setString(4, company);
            statement.setInt(5, Integer.parseInt(id));

            int rowsUpdated = statement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Medicine updated successfully!");
                fetchMedicines();
                clearFields();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error updating medicine: " + e.getMessage());
        }

    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // TODO add your handling code here:

        String medicine = tfMedicine.getText();
        String price = tfPrice.getText();
        String quantity = tfQuantity.getText();
        String company = cbCompany.getSelectedItem().toString();

        if (medicine.isEmpty() || price.isEmpty() || quantity.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
            return;
        }

        try {
            int id = getNextMedicineId();
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
            String insertQuery = "INSERT INTO universitysystem.medicine (ID, MEDICINE_NAME, PRICE, QUANTITY, COMPANY) VALUES (?, ?, ?, ?, ?)";
            java.sql.PreparedStatement statement = connection.prepareStatement(insertQuery);

            statement.setInt(1, id);
            statement.setString(2, medicine);
            statement.setString(3, price);
            statement.setString(4, quantity);
            statement.setString(5, company);

            int rowsInserted = statement.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Medicine added successfully!");
                fetchMedicines();
                clearFields();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error adding medicine: " + e.getMessage());
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    
    public void medicine_table(){
        try{
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "root123");

            java.sql.Statement statement = connection.createStatement();
            String sql = "SELECT * FROM universitysystem.medicine;";
   
            java.sql.ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                String id = rs.getString("Id");
                String medicine = rs.getString("MEDICINE_NAME");
                String price = rs.getString("PRICE");
                String quantity = rs.getString("QUANTITY");
                String company = rs.getString("COMPANY");
                
                String tbData[] = {id,medicine,price, quantity, company};
                DefaultTableModel tb1Model = (DefaultTableModel)tableMedicine.getModel();
                
                tb1Model.addRow(tbData);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Please add data in correct format");

    
    }                                 
    }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void tableMedicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMedicineMouseClicked
        // TODO add your handling code here:
DefaultTableModel tb1Model = (DefaultTableModel) tableMedicine.getModel();
        tfID.setText(tb1Model.getValueAt(tableMedicine.getSelectedRow(), 0).toString());
        tfMedicine.setText(tb1Model.getValueAt(tableMedicine.getSelectedRow(), 1).toString());
        tfPrice.setText(tb1Model.getValueAt(tableMedicine.getSelectedRow(), 2).toString());
        tfQuantity.setText(tb1Model.getValueAt(tableMedicine.getSelectedRow(), 3).toString());
        cbCompany.setSelectedItem(tb1Model.getValueAt(tableMedicine.getSelectedRow(), 4).toString());
        
    }//GEN-LAST:event_tableMedicineMouseClicked

        private void clearFields() {
        tfID.setText("");
        tfMedicine.setText("");
        tfPrice.setText("");
        tfQuantity.setText("");
        cbCompany.setSelectedIndex(0);
    }
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel tb1Model = (DefaultTableModel)tableMedicine.getModel();
        if(tableMedicine.getSelectedRowCount()==1){
        int id = Integer.parseInt(tfID.getText());
        String medicine = tfMedicine.getText();
        String price = tfPrice.getText();
        String quantity = tfQuantity.getText();
        String production = "";
        String expiry = "";
        String company = (String) cbCompany.getSelectedItem().toString();
        MedicineModel medicines = new MedicineModel(id, medicine, price, quantity, company);
        medicines.deleteMedicines();
        
        tb1Model.removeRow(tableMedicine.getSelectedRow());
        
        tfID.setText("");
        tfMedicine.setText("");
        tfPrice.setText("");
        tfQuantity.setText("");
        cbCompany.setSelectedItem("");
        
        }
        
        else{
            if(tableMedicine.getRowCount()==0){
               JOptionPane.showMessageDialog(this, "Table is Empty"); 
            }
            else{
                JOptionPane.showMessageDialog(this, "Select a Row");
            } 
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
         this.hide();
        InventoryEnterpriseLogin frm = new InventoryEnterpriseLogin();
        frm.setVisible(true);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel medModel = (DefaultTableModel)tableMedicine.getModel();
        medModel.setRowCount(0);
        
        try{
            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
            java.sql.Statement statement = connection.createStatement();
            String getMedQuery = "SELECT * FROM universitysystem.medicine";
            java.sql.ResultSet medData = statement.executeQuery(getMedQuery);

            while(medData.next()){
                String medName = medData.getString("MEDICINE_NAME");
                String price = medData.getString("PRICE");
                String quantity = medData.getString("QUANTITY");
                String company = medData.getString("COMPANY");
                
                String tbData[] = {medName,price, quantity, company};
                
                medModel.addRow(tbData);
            }
            
         }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
         }
    }//GEN-LAST:event_buttonSearchActionPerformed


    private void cbCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCompanyActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medicines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JComboBox<String> cbCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tableMedicine;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfMedicine;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfQuantity;
    // End of variables declaration//GEN-END:variables
}
