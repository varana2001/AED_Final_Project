/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bankEnterprise;

import bankEnterprise.bank.Model.bankEmployee;
import com.sun.jdi.connect.spi.Connection;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akshtalati
 */
public class bankAdmin extends javax.swing.JFrame {

    /**
     *
     */
    public bankAdmin() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        genderTxt = new javax.swing.JComboBox<>();
        phoneTxt = new javax.swing.JTextField();
        addTxt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ageTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        viewBtn1 = new javax.swing.JButton();
        btnStudLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        genderTxt.setForeground(new java.awt.Color(255, 255, 255));
        genderTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel1.add(genderTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 169, 150, -1));
        jPanel1.add(phoneTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 150, -1));

        addTxt.setBackground(new java.awt.Color(0, 0, 0));
        addTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        addTxt.setForeground(new java.awt.Color(255, 255, 255));
        addTxt.setText("Add");
        addTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTxtActionPerformed(evt);
            }
        });
        jPanel1.add(addTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 467, -1, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("User name:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 129, -1, -1));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Password:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(464, 167, -1, -1));
        jPanel1.add(usernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 126, 150, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Bank Employee");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 202, -1));

        passwordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTxtActionPerformed(evt);
            }
        });
        jPanel1.add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 167, 150, -1));

        employeeTable.setBackground(new java.awt.Color(0, 102, 102));
        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Gender", "Phone", "Age"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 296, 706, 153));

        viewBtn.setBackground(new java.awt.Color(0, 0, 0));
        viewBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        viewBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 467, -1, -1));

        updateBtn.setBackground(new java.awt.Color(0, 0, 0));
        updateBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(728, 467, -1, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Gender:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 169, -1, -1));

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 0, 0));
        jLabel14.setText("Name:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 128, -1, 20));
        jPanel1.add(ageTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 245, 150, -1));

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 0));
        jLabel15.setText("Phone:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, -1, -1));
        jPanel1.add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 128, 150, -1));

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 0, 0));
        jLabel16.setText("Age:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, -1, -1));

        viewBtn1.setBackground(new java.awt.Color(0, 0, 0));
        viewBtn1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        viewBtn1.setForeground(new java.awt.Color(255, 255, 255));
        viewBtn1.setText("Delete");
        viewBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(viewBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 467, -1, -1));

        btnStudLogout.setBackground(new java.awt.Color(0, 0, 0));
        btnStudLogout.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnStudLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnStudLogout.setText("Logout");
        btnStudLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudLogoutActionPerformed(evt);
            }
        });
        jPanel1.add(btnStudLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 26, -1, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/(resized)360_F_57320294_h4BEO6momplKt9RcL4gpqaAzWzJYpmxM.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String EmployeeUsername = "";
    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked


          int selectedRow = employeeTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "No row selected. Please select an employee!");
        return;
    }

    // Populate fields with selected row data
    nameTxt.setText(employeeTable.getValueAt(selectedRow, 0).toString());
    genderTxt.setSelectedItem(employeeTable.getValueAt(selectedRow, 1).toString());
    phoneTxt.setText(employeeTable.getValueAt(selectedRow, 2).toString());
    ageTxt.setText(employeeTable.getValueAt(selectedRow, 3).toString());

    // Fetch username and password from the database using the name
    try {
        String name = nameTxt.getText();
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "SELECT username, password FROM bankemployee WHERE name = ?";
        java.sql.PreparedStatement statement = connection.prepareStatement(query);
        statement.setString(1, name);

        java.sql.ResultSet rs = statement.executeQuery();
        if (rs.next()) {
            usernameTxt.setText(rs.getString("username"));
            passwordTxt.setText(rs.getString("password"));
        } else {
            JOptionPane.showMessageDialog(null, "No additional details found for the selected employee!");
        }

        connection.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching username and password: " + e.getMessage());
    }
    }//GEN-LAST:event_employeeTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
   String username = usernameTxt.getText();

    // Validate that a username is provided
    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Username is required to update employee details!");
        return;
    }

    // Get other field values
    String name = nameTxt.getText();
    String gender = (String) genderTxt.getSelectedItem();
    String phone = phoneTxt.getText();
    String ageStr = ageTxt.getText();
    String password = passwordTxt.getText();

    // Validate input fields
    if (name.isEmpty() || gender == null || phone.isEmpty() || ageStr.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in all fields!");
        return;
    }

    try {
        // Parse and validate age
        int age = Integer.parseInt(ageStr);

        // Update the database
        java.sql.Connection connection = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/universitysystem", "root", "user1234"
        );
        String updateQuery = "UPDATE bankemployee SET name = ?, gender = ?, phone = ?, age = ?, password = ? WHERE username = ?";
        java.sql.PreparedStatement statement = connection.prepareStatement(updateQuery);
        statement.setString(1, name);
        statement.setString(2, gender);
        statement.setString(3, phone);
        statement.setInt(4, age);
        statement.setString(5, password);
        statement.setString(6, username);

        // Execute the update query
        int rowsAffected = statement.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Employee updated successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "No matching employee found to update!");
        }

        // Refresh the table and close the connection
        refreshEmployeeTable();
        connection.close();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Age must be a valid number!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error updating employee: " + e.getMessage());
    }
    }//GEN-LAST:event_updateBtnActionPerformed


    private void addTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTxtActionPerformed
        // TODO add your handling code here:
    String name = nameTxt.getText().trim();
    String gender = (String) genderTxt.getSelectedItem();
    String phone = phoneTxt.getText().trim();
    String ageStr = ageTxt.getText().trim();
    String username = usernameTxt.getText().trim();
    String password = passwordTxt.getText().trim();

    // Check if any field is empty
    if (name.isEmpty() || gender == null || phone.isEmpty() || ageStr.isEmpty() || username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in all fields!");
        return;
    }

    try {
        // Parse and validate the age field
        int age = Integer.parseInt(ageStr);

        // Establish a database connection
        java.sql.Connection connection = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/universitysystem", "root", "user1234"
        );

        // Prepare the SQL query
        String insertQuery = "INSERT INTO bankemployee (name, gender, phone, age, username, password) VALUES (?, ?, ?, ?, ?, ?)";
        java.sql.PreparedStatement statement = connection.prepareStatement(insertQuery);

        // Set query parameters
        statement.setString(1, name);
        statement.setString(2, gender);
        statement.setString(3, phone);
        statement.setInt(4, age);
        statement.setString(5, username);
        statement.setString(6, password);

        // Execute the query
        int rowsAffected = statement.executeUpdate();

        // Check if the query was successful
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Employee added successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Failed to add employee.");
        }

        // Refresh the employee table
        refreshEmployeeTable();

        // Close the connection
        connection.close();

    } catch (NumberFormatException e) {
        // Handle invalid age input
        JOptionPane.showMessageDialog(null, "Age must be a valid number!");
    } catch (java.sql.SQLIntegrityConstraintViolationException e) {
        // Handle unique constraint violations (e.g., username already exists)
        JOptionPane.showMessageDialog(null, "Username already exists. Please choose a different username.");
    } catch (Exception e) {
        // Catch-all for other exceptions
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }

        //employee_table();
    }//GEN-LAST:event_addTxtActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        refreshEmployeeTable();
    }

    private void refreshEmployeeTable() {

 DefaultTableModel tb1Model = (DefaultTableModel) employeeTable.getModel();
    tb1Model.setRowCount(0);

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String fetchQuery = "SELECT name, gender, phone, age FROM bankemployee";
        java.sql.Statement statement = connection.createStatement();
        java.sql.ResultSet rs = statement.executeQuery(fetchQuery);

        while (rs.next()) {
            String name = rs.getString("name");
            String gender = rs.getString("gender");
            String phone = rs.getString("phone");
            String age = rs.getString("age");

            String[] rowData = {name, gender, phone, age};
            tb1Model.addRow(rowData);
        }
        connection.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error loading data: " + e.getMessage());
    }


    }//GEN-LAST:event_viewBtnActionPerformed


    private void viewBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtn1ActionPerformed
   String username = usernameTxt.getText();

    // Validate that a username is provided
    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Username is required to delete employee details!");
        return;
    }

    try {
        // Establish a database connection
        java.sql.Connection connection = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/universitysystem", "root", "user1234"
        );

        // Prepare the delete query
        String deleteQuery = "DELETE FROM bankemployee WHERE username = ?";
        java.sql.PreparedStatement statement = connection.prepareStatement(deleteQuery);
        statement.setString(1, username);

        // Execute the delete query
        int rowsAffected = statement.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Employee deleted successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "No matching employee found to delete!");
        }

        // Refresh the table and close the connection
        refreshEmployeeTable();
        connection.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error deleting employee: " + e.getMessage());
    }
    }//GEN-LAST:event_viewBtn1ActionPerformed

    private void btnStudLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudLogoutActionPerformed
        // TODO add your handling code here:
        financialLogin emergencyLoginObj = new financialLogin();
        setVisible(false);
        emergencyLoginObj.setVisible(true);
    }//GEN-LAST:event_btnStudLogoutActionPerformed

    private void passwordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTxtActionPerformed

//    public void employee_table(){
//        try{
//            java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
//            
//            System.out.println("connection open");
//            java.sql.Statement statement = connection.createStatement();
//            String sql = "SELECT * FROM universitysystem.bankemployee;";
//           // statement.executeUpdate("insert into hospitalsystem.login" + "(role, username, password)" + "values ('"+role+"','"+username+"', '"+password+"')");
//            //JOptionPane.showMessageDialog(null, "User successfully added!");
//            java.sql.ResultSet rs = statement.executeQuery(sql);
//            while(rs.next()){
//                String id = rs.getString("Id");
//                String name = rs.getString("Name");
//                String gender = rs.getString("Gender");
//                String age = rs.getString("Age");
//                String phone = rs.getString("Phone");
//                String salary = rs.getString("Salary");
//                String account = rs.getString("AccountType");
//
//                
//                
//                String tbData[] = {id,name,gender,age,phone,salary,account};
//                DefaultTableModel tb1Model = (DefaultTableModel)employeeTable.getModel();
//                
//                tb1Model.addRow(tbData);
//                 System.out.println("Ashish well done");
//                
//            }
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null,"please add data in correct format!");
//    }                                 
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bankAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bankAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bankAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bankAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bankAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTxt;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JButton btnStudLogout;
    private javax.swing.JTable employeeTable;
    private javax.swing.JComboBox<String> genderTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JButton viewBtn;
    private javax.swing.JButton viewBtn1;
    // End of variables declaration//GEN-END:variables
}
