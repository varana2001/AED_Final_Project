/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package university;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import university.Model.Professor;
import university.Model.Student;

/**
 *
 * @author bharg
 */
public class staffAdmin extends javax.swing.JFrame {

    /**
     * Creates new form staffAdmin
     */
    public staffAdmin(){
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtStudName = new javax.swing.JTextField();
        txtStudPassword = new javax.swing.JTextField();
        txtStudUsername = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStud = new javax.swing.JTable();
        addStudents = new javax.swing.JButton();
        btnUpdateStud = new javax.swing.JButton();
        btnStudDelete = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtStudMail = new javax.swing.JTextField();
        txtStudAge = new javax.swing.JTextField();
        btnStudView = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtProfPassword = new javax.swing.JTextField();
        txtProfName = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnProfDelete = new javax.swing.JButton();
        txtProfUsername = new javax.swing.JTextField();
        btnAddProf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProf = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtProfMail = new javax.swing.JTextField();
        txtProfAge = new javax.swing.JTextField();
        btnProfView = new javax.swing.JButton();
        txtSubTeach = new javax.swing.JComboBox<>();
        jLabellogostafadmin = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnUniAdminLogout = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabelLogoActionpage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(153, 0, 0));

        jPanel2.setBackground(new java.awt.Color(204, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Students");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Name:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 115, -1, -1));

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Password:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, -1, -1));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Username:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, -1, -1));
        jPanel2.add(txtStudName, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 112, 200, -1));
        jPanel2.add(txtStudPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 150, 180, -1));
        jPanel2.add(txtStudUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 180, -1));

        tblStud.setBackground(new java.awt.Color(153, 0, 0));
        tblStud.setForeground(new java.awt.Color(255, 255, 255));
        tblStud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Subject Taken", "Email", "Age"
            }
        ));
        tblStud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblStud);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 780, 180));

        addStudents.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        addStudents.setText("Add");
        addStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentsActionPerformed(evt);
            }
        });
        jPanel2.add(addStudents, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, -1, -1));

        btnUpdateStud.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnUpdateStud.setText("Update");
        btnUpdateStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStudActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdateStud, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, -1, -1));

        btnStudDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnStudDelete.setText("Delete");
        btnStudDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnStudDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 450, -1, -1));

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Age:");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 197, -1, -1));

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Email:");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 156, -1, -1));
        jPanel2.add(txtStudMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 153, 200, -1));
        jPanel2.add(txtStudAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 194, 200, -1));

        btnStudView.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnStudView.setText("View");
        btnStudView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudViewActionPerformed(evt);
            }
        });
        jPanel2.add(btnStudView, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 450, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/toppng.com-vignette-png-19201080-overlay-photo-1920x1080.png"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 510));

        jTabbedPane1.addTab("Students", jPanel2);

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Professor");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 39, 170, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 124, -1, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Subject Teaching:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 168, -1, -1));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 168, -1, -1));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Username:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 124, -1, -1));
        jPanel1.add(txtProfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 165, 160, -1));

        txtProfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtProfName, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 121, 250, -1));

        jButton2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 468, -1, -1));

        btnProfDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnProfDelete.setText("Delete");
        btnProfDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnProfDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(633, 468, -1, -1));
        jPanel1.add(txtProfUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 121, 161, -1));

        btnAddProf.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnAddProf.setText("Add");
        btnAddProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProfActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 468, -1, -1));

        tblProf.setBackground(new java.awt.Color(153, 0, 0));
        tblProf.setForeground(new java.awt.Color(255, 255, 255));
        tblProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Subject Teaching", "Email", "Age"
            }
        ));
        tblProf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProfMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProf);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 289, 715, 161));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Age:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, -1, -1));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Email:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 209, -1, -1));

        txtProfMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfMailActionPerformed(evt);
            }
        });
        jPanel1.add(txtProfMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 206, 250, -1));

        txtProfAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfAgeActionPerformed(evt);
            }
        });
        jPanel1.add(txtProfAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 247, 100, -1));

        btnProfView.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnProfView.setText("View");
        btnProfView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfViewActionPerformed(evt);
            }
        });
        jPanel1.add(btnProfView, new org.netbeans.lib.awtextra.AbsoluteConstraints(723, 468, -1, -1));

        txtSubTeach.setForeground(new java.awt.Color(255, 255, 255));
        txtSubTeach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Web Design", "AED", "DMDD", "PSA" }));
        jPanel1.add(txtSubTeach, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 165, 150, -1));

        jLabellogostafadmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Northeastern_University_Logo-White.png"))); // NOI18N
        jPanel1.add(jLabellogostafadmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 6, 120, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/toppng.com-vignette-png-19201080-overlay-photo-1920x1080.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 510));

        jTabbedPane1.addTab("Professors", jPanel1);

        jPanel3.setBackground(new java.awt.Color(153, 0, 0));

        btnUniAdminLogout.setBackground(new java.awt.Color(153, 0, 0));
        btnUniAdminLogout.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnUniAdminLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnUniAdminLogout.setText("Log out");
        btnUniAdminLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUniAdminLogoutActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Want to end the current session?");

        jLabelLogoActionpage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo_Northeastern-University-300x222.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnUniAdminLogout)
                        .addGap(108, 108, 108))
                    .addComponent(jLabel15))
                .addGap(318, 318, 318))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(jLabelLogoActionpage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabelLogoActionpage, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(btnUniAdminLogout)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Action", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    public class Students{
        public static void createStudents(String name, String subjectTaken, String email, int age, String studUsername, String studPassword){
    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "INSERT INTO students (Name, SubjectTaken, Email, Age, username, password) VALUES (?, ?, ?, ?, ?, ?)";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);
        
        preparedStatement.setString(1, name);
        preparedStatement.setString(2, subjectTaken);
        preparedStatement.setString(3, email);
        preparedStatement.setInt(4, age);
        preparedStatement.setString(5, studUsername);
        preparedStatement.setString(6, studPassword);
        
        int result = preparedStatement.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Student successfully added!");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error adding student: " + e.getMessage());
    }
        }
    }
    
    private void addStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentsActionPerformed
 // TODO add your handling code here:
    String name = txtStudName.getText();
    String subjectTaken = ""; // Leave blank
    String email = txtStudMail.getText();
    String studUsername = txtStudUsername.getText();
    String studPassword = txtStudPassword.getText();
    int age = 0;

    // Validate inputs
    if (name.isEmpty() || email.isEmpty() || studUsername.isEmpty() || studPassword.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter all required details!");
        return;
    }

    try {
        age = Integer.parseInt(txtStudAge.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter a valid age!");
        return;
    }

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "INSERT INTO students (Name, SubjectTaken, Email, Age, username, password) VALUES (?, ?, ?, ?, ?, ?)";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);

        preparedStatement.setString(1, name);
        preparedStatement.setString(2, subjectTaken); // Blank is allowed
        preparedStatement.setString(3, email);
        preparedStatement.setInt(4, age);
        preparedStatement.setString(5, studUsername);
        preparedStatement.setString(6, studPassword);

        int result = preparedStatement.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Student added successfully!");
            clearTextFields();
            refreshStudentTable(); // Refresh table
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error adding student: " + e.getMessage());
    }
    }//GEN-LAST:event_addStudentsActionPerformed

    private void btnStudViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudViewActionPerformed
        // TODO add your handling code here:
 DefaultTableModel studModel = (DefaultTableModel) tblStud.getModel();
    studModel.setRowCount(0);

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String studentQuery = "SELECT * FROM students";
        java.sql.Statement statement = connection.createStatement();
        java.sql.ResultSet studentData = statement.executeQuery(studentQuery);

        while (studentData.next()) {
            String studName = studentData.getString("Name");
            String subject = studentData.getString("SubjectTaken");
            String email = studentData.getString("Email");
            String age = studentData.getString("Age");
            String username = studentData.getString("username");

            String tbData[] = {studName, subject, email, age, username};
            studModel.addRow(tbData);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching students: " + e.getMessage());
    }
    }//GEN-LAST:event_btnStudViewActionPerformed

    private void btnUpdateStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStudActionPerformed
        // TODO add your handling code here:String studName = txtStudName.getText();
String studName = txtStudName.getText();
    String subjectTaken = ""; // Replace with a dynamic input if needed
    String studMail = txtStudMail.getText();
    String studUsername = txtStudUsername.getText();
    String studPassword = txtStudPassword.getText();
    int age;

    // Validate age input
    try {
        age = Integer.parseInt(txtStudAge.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Age must be a valid number!");
        return;
    }

    if (studUsername.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Select a student to update!");
        return;
    }

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String updateQuery = "UPDATE students SET Name = ?, SubjectTaken = ?, Email = ?, Age = ?, password = ? WHERE username = ?";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);

        preparedStatement.setString(1, studName);
        preparedStatement.setString(2, subjectTaken);
        preparedStatement.setString(3, studMail);
        preparedStatement.setInt(4, age);
        preparedStatement.setString(5, studPassword);
        preparedStatement.setString(6, studUsername);

        int result = preparedStatement.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Student updated successfully!");
        }
                    refreshStudentTable();
    } 
    catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error updating student: " + e.getMessage());
    }
        
//        if(profModel.getRowCount() == 1){
//            String name = txtProfName.getText();
//            System.out.println(name);
//        }
    }//GEN-LAST:event_btnUpdateStudActionPerformed
    String profUserame = "";    
    String studUsername = "";
    private void tblStudMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudMouseClicked
        // TODO add your handling code here:
    DefaultTableModel studModel = (DefaultTableModel) tblStud.getModel();
    int selectedRow = tblStud.getSelectedRow();
    
    // Populate text fields with data from the selected row
    txtStudName.setText(studModel.getValueAt(selectedRow, 0).toString());
    txtStudMail.setText(studModel.getValueAt(selectedRow, 2).toString());
    txtStudAge.setText(studModel.getValueAt(selectedRow, 3).toString());
    
    // Fetch username and password from the database
    String selectedName = studModel.getValueAt(selectedRow, 0).toString(); // Assumes Name is unique
    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "SELECT username, password FROM students WHERE Name = ?";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, selectedName);
        java.sql.ResultSet resultSet = preparedStatement.executeQuery();
        if (resultSet.next()) {
            txtStudUsername.setText(resultSet.getString("username"));
            txtStudPassword.setText(resultSet.getString("password"));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching student details: " + e.getMessage());
    }
    }//GEN-LAST:event_tblStudMouseClicked

    private void btnStudDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudDeleteActionPerformed
        // TODO add your handling code here:
 if (txtStudUsername.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please select a student to delete!");
        return;
    }

    String studUsername = txtStudUsername.getText();

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");

        // Step 1: Delete dependent rows in courseregistration
        String deleteCourseRegistrationQuery = "DELETE FROM courseregistration WHERE username = ?";
        java.sql.PreparedStatement deleteCourseRegStmt = connection.prepareStatement(deleteCourseRegistrationQuery);
        deleteCourseRegStmt.setString(1, studUsername);
        deleteCourseRegStmt.executeUpdate();

        // Step 2: Delete the student
        String deleteStudentQuery = "DELETE FROM students WHERE username = ?";
        java.sql.PreparedStatement deleteStudentStmt = connection.prepareStatement(deleteStudentQuery);
        deleteStudentStmt.setString(1, studUsername);

        int result = deleteStudentStmt.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Student deleted successfully!");
            clearTextFields();
            refreshStudentTable(); // Refresh table
        } else {
            JOptionPane.showMessageDialog(null, "Error: Student not found or could not be deleted!");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error deleting student: " + e.getMessage());
    }
}


// Helper method to clear text fields
private void clearTextFields() {
    txtStudName.setText("");
    txtStudMail.setText("");
    txtStudAge.setText("");
    txtStudUsername.setText("");
    txtStudPassword.setText("");


    }//GEN-LAST:event_btnStudDeleteActionPerformed


private void refreshStudentTable() {
    DefaultTableModel studModel = (DefaultTableModel) tblStud.getModel();
    studModel.setRowCount(0);

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String studentQuery = "SELECT * FROM students";
        java.sql.Statement statement = connection.createStatement();
        java.sql.ResultSet studentData = statement.executeQuery(studentQuery);

        while (studentData.next()) {
            String studName = studentData.getString("Name");
            String subject = studentData.getString("SubjectTaken");
            String email = studentData.getString("Email");
            String age = studentData.getString("Age");
            String username = studentData.getString("username");

            String tbData[] = {studName, subject, email, age, username};
            studModel.addRow(tbData);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching students: " + e.getMessage());
    }
}

    private void btnUniAdminLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUniAdminLogoutActionPerformed
        // TODO add your handling code here:
        uniLogin uniLoginObj = new uniLogin();
        setVisible(false);
        uniLoginObj.setVisible(true);
    }//GEN-LAST:event_btnUniAdminLogoutActionPerformed

    private void btnProfViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfViewActionPerformed
        // TODO add your handling code here:
DefaultTableModel profModel = (DefaultTableModel) tblProf.getModel();
    profModel.setRowCount(0);

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String profQuery = "SELECT * FROM professors";
        java.sql.Statement statement = connection.createStatement();
        java.sql.ResultSet profData = statement.executeQuery(profQuery);

        while (profData.next()) {
            // Ensure the order matches your table column order: Name, Subject, Age, Email
            String profName = profData.getString("Name");
            String subject = profData.getString("SubjectTeach");
            String email = profData.getString("Email");  // Fetch Email first
            String age = profData.getString("Age");      // Fetch Age last

            // Add data in the correct order
            Object[] tbData = {profName, subject, email,age,};
            profModel.addRow(tbData);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching professors: " + e.getMessage());
    }
    }//GEN-LAST:event_btnProfViewActionPerformed

    private void tblProfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProfMouseClicked
        // TODO add your handling code here:
DefaultTableModel profModel = (DefaultTableModel) tblProf.getModel();
    int selectedRow = tblProf.getSelectedRow();

txtProfName.setText(profModel.getValueAt(selectedRow, 0).toString());
txtSubTeach.setSelectedItem(profModel.getValueAt(selectedRow, 1).toString());
txtProfMail.setText(profModel.getValueAt(selectedRow, 2).toString());
txtProfAge.setText(profModel.getValueAt(selectedRow, 3).toString());


    // Fetch username and password
    String selectedProfName = profModel.getValueAt(selectedRow, 0).toString(); // Assumes Name is unique
    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "SELECT username, password FROM professors WHERE Name = ?";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, selectedProfName);
        java.sql.ResultSet resultSet = preparedStatement.executeQuery();
        if (resultSet.next()) {
            txtProfUsername.setText(resultSet.getString("username"));
            txtProfPassword.setText(resultSet.getString("password"));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error fetching professor details: " + e.getMessage());
    }
    }//GEN-LAST:event_tblProfMouseClicked

    private void btnAddProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProfActionPerformed
        // TODO add your handling code here:
String profName = txtProfName.getText();
    String subjectTeach = txtSubTeach.getSelectedItem().toString();
    String profEmail = txtProfMail.getText();
    String profUsername = txtProfUsername.getText();
    String profPassword = txtProfPassword.getText();
    int age = 0;

    // Validate inputs
    if (profName.isEmpty() || subjectTeach.isEmpty() || profEmail.isEmpty() || profUsername.isEmpty() || profPassword.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter all required details!");
        return;
    }

    try {
        age = Integer.parseInt(txtProfAge.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter a valid age!");
        return;
    }

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String query = "INSERT INTO professors (Name, SubjectTeach, Email, Age, username, password) VALUES (?, ?, ?, ?, ?, ?)";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);

        preparedStatement.setString(1, profName);
        preparedStatement.setString(2, subjectTeach);
        preparedStatement.setString(3, profEmail);
        preparedStatement.setInt(4, age);
        preparedStatement.setString(5, profUsername);
        preparedStatement.setString(6, profPassword);

        int result = preparedStatement.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Professor added successfully!");
            clearProfessorFields();
            btnProfViewActionPerformed(null); // Refresh table
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error adding professor: " + e.getMessage());
    }
    }//GEN-LAST:event_btnAddProfActionPerformed

    private void btnProfDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfDeleteActionPerformed
        // TODO add your handling code here:
  if (txtProfUsername.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please select a professor to delete!");
        return;
    }

    String profUsername = txtProfUsername.getText();

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");

        // Step 1: Get professor name from username
        String fetchNameQuery = "SELECT name FROM professors WHERE username = ?";
        java.sql.PreparedStatement fetchNameStmt = connection.prepareStatement(fetchNameQuery);
        fetchNameStmt.setString(1, profUsername);
        java.sql.ResultSet rs = fetchNameStmt.executeQuery();

        if (rs.next()) {
            String profName = rs.getString("name");

            // Step 2: Delete from courseregistration
            String deleteFromCoursesQuery = "DELETE FROM courseregistration WHERE ProfessorName = ?";
            java.sql.PreparedStatement deleteCoursesStmt = connection.prepareStatement(deleteFromCoursesQuery);
            deleteCoursesStmt.setString(1, profName);
            deleteCoursesStmt.executeUpdate();

            // Step 3: Delete from professors
            String deleteFromProfessorsQuery = "DELETE FROM professors WHERE username = ?";
            java.sql.PreparedStatement deleteProfessorStmt = connection.prepareStatement(deleteFromProfessorsQuery);
            deleteProfessorStmt.setString(1, profUsername);
            int result = deleteProfessorStmt.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Professor deleted successfully!");
                clearProfessorFields();
                btnProfViewActionPerformed(null); // Refresh table
            } else {
                JOptionPane.showMessageDialog(null, "Error: Professor could not be deleted!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error: Professor not found!");
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error deleting professor: " + e.getMessage());
    }
    }//GEN-LAST:event_btnProfDeleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
String profName = txtProfName.getText();
    String subjectTeach = txtSubTeach.getSelectedItem().toString();
    String profEmail = txtProfMail.getText();
    String profUsername = txtProfUsername.getText();
    String profPassword = txtProfPassword.getText();
    int age = 0;

    // Validate inputs
    try {
        age = Integer.parseInt(txtProfAge.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Age must be a valid number!");
        return;
    }

    if (profUsername.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Select a professor to update!");
        return;
    }

    try {
        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/universitysystem", "root", "user1234");
        String updateQuery = "UPDATE professors SET Name = ?, SubjectTeach = ?, Email = ?, Age = ?, password = ? WHERE username = ?";
        java.sql.PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);

        preparedStatement.setString(1, profName);
        preparedStatement.setString(2, subjectTeach);
        preparedStatement.setString(3, profEmail);
        preparedStatement.setInt(4, age);
        preparedStatement.setString(5, profPassword);
        preparedStatement.setString(6, profUsername);

        int result = preparedStatement.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Professor updated successfully!");
            btnProfViewActionPerformed(null); // Refresh table
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error updating professor: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtProfAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfAgeActionPerformed

    private void txtProfMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfMailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfMailActionPerformed

    private void txtProfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staffAdmin().setVisible(true);
            }
        });
    }
    private void clearProfessorFields() {
    txtProfName.setText("");
    txtSubTeach.setSelectedIndex(0);
    txtProfMail.setText("");
    txtProfAge.setText("");
    txtProfUsername.setText("");
    txtProfPassword.setText("");
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudents;
    private javax.swing.JButton btnAddProf;
    private javax.swing.JButton btnProfDelete;
    private javax.swing.JButton btnProfView;
    private javax.swing.JButton btnStudDelete;
    private javax.swing.JButton btnStudView;
    private javax.swing.JButton btnUniAdminLogout;
    private javax.swing.JButton btnUpdateStud;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelLogoActionpage;
    private javax.swing.JLabel jLabellogostafadmin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblProf;
    private javax.swing.JTable tblStud;
    private javax.swing.JTextField txtProfAge;
    private javax.swing.JTextField txtProfMail;
    private javax.swing.JTextField txtProfName;
    private javax.swing.JTextField txtProfPassword;
    private javax.swing.JTextField txtProfUsername;
    private javax.swing.JTextField txtStudAge;
    private javax.swing.JTextField txtStudMail;
    private javax.swing.JTextField txtStudName;
    private javax.swing.JTextField txtStudPassword;
    private javax.swing.JTextField txtStudUsername;
    private javax.swing.JComboBox<String> txtSubTeach;
    // End of variables declaration//GEN-END:variables
}
